/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/Forest.glb')
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Dum.geometry}
        material={materials.envo}
        position={[0, 17.51, 0]}
        material-envMapIntensity={0.01}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.shadow.geometry}
        material={materials.Roof}
        position={[2.24, 26.69, 22.77]}
        
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Threes.geometry}
        material={nodes.Threes.material}
        position={[-7.53, 0, 20.64]}
        material-envMapIntensity={0.35}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Ground.geometry}
        material={materials.MainGround}
        position={[1.14, -6.98, -3.87]}
        material-envMapIntensity={0.1}
      />
      <group position={[-16.75, 4.63, -6.6]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane051.geometry}
          material={nodes.Plane051.material}
          material-envMapIntensity={0.1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane051_1.geometry}
          material={nodes.Plane051_1.material}
          
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane051_2.geometry}
          material={materials.sec_env_cuted_grass}
          material-envMapIntensity={0.1}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plants001.geometry}
        material={nodes.Plants001.material}
        position={[-16.75, 4.63, -6.6]}
        material-envMapIntensity={0.1}
      />
    </group>
  )
}

useGLTF.preload('/Forest.glb')
